{
  "version": 3,
  "sources": ["../../../../web/js/modules/report-sales/index.js", "../../../../web/js/modules/report-sales/filtros.js", "../../../../web/js/modules/report-sales/request.js", "../../../../web/js/modules/report-sales/table.js"],
  "sourcesContent": ["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { SessionContext, SessionProvider } from \"../../providers/useSession\";\nimport SalesFilter from \"./filtros\";\nimport { getProductsSale, getSales, removeSales } from \"./request\";\nimport SalesReportTable from \"./table\";\nimport { Modal } from \"react-bootstrap\";\nimport { totalCurrency } from \"../../utils/functions\";\n\nconst container = document.getElementById(\"divContainer\");\nconst root = createRoot(container);\n\nconst SalesReport = () => {\n    const [session] = React.useContext(SessionContext);\n    const [sales, setSales] = React.useState([]);\n    const [sale, setSale] = React.useState(null);\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const handleView = (sale) => {\n        getProductsSale(sale.idVenta)\n            .then((res) => {\n                sale.products = res;\n                setSale(sale);\n                setOpenModal(true);\n            });\n    }\n\n    const handleDelete = (sale) => {\n        (async () => {\n            const res = await removeSales(sale.idVenta, session.idSucursal);\n            setSales([]);\n        })();\n    }\n\n    const submitFilters = async (filters) => {\n        const sales = await getSales(filters);\n        setSales(sales);\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h5>Reporte de Ventas</h5>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h6>Filtros</h6>\n                            <SalesFilter onSubmit={submitFilters}></SalesFilter>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"table-responsive\">\n                                <SalesReportTable\n                                    sales={sales}\n                                    onDelete={handleDelete}\n                                    onView={handleView}>\n                                </SalesReportTable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                {\n                    sale ?\n                        (\n                            <Modal show={openModal} onHide={() => {\n                                setOpenModal(false);\n                                setSale(null);\n                            }}>\n                                <Modal.Body>\n                                    <div className=\"row row-sm\">\n                                        <div className=\"col-md-12 col-xl-12\">\n                                            <div className=\" main-content-body-invoice\">\n                                                <div className=\"card card-invoice\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"invoice-header\">\n                                                            <h1 className=\"invoice-title\">Nota</h1>\n                                                            <div className=\"billed-from\">\n                                                                <h6 id=\"ventaDireccion\">{sale.direccion}</h6>\n                                                                <p><br />\n                                                                    <br />\n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row mg-t-20\">\n                                                            <div className=\"col-md\">\n                                                                <label className=\"tx-gray-600\">Cliente:</label>\n                                                                <div className=\"billed-to\">\n                                                                    <h6 id=\"clienteDetalle\">{sale.cliente}</h6>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md\">\n                                                                <label className=\"tx-gray-600\">Infomacion de la nota:</label>\n                                                                <p className=\"invoice-info-row\"><span><small>Nota No.</small></span> <span><small id=\"idDetalle\">{sale.idVenta.padStart(3, \"0\")}</small></span></p>\n                                                                <p className=\"invoice-info-row\"><span><small>Vendedor:</small></span> <span><small id=\"vendedorDetalle\">{sale.vendedor}</small></span></p>\n                                                                <p className=\"invoice-info-row\"><span><small>Fecha y Hora:</small></span> <span><small id=\"fechaDetalle\">{sale.fecha}</small></span></p>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"table-responsive mg-t-40\">\n                                                            <table id=\"tablaProductosDetalle\" className=\"table table-invoice border text-md-nowrap mb-0\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th><small>Producto</small></th>\n                                                                        <th><small>Precio</small></th>\n                                                                        <th><small>Cantidad</small></th>\n                                                                        <th><small>Total</small></th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {\n                                                                        sale.products.map((product, id) => (\n                                                                            <tr key={id}>\n                                                                                <td>{product.nombre}</td>\n                                                                                <td>{product.precio}</td>\n                                                                                <td>{product.cantidad}</td>\n                                                                                <td>{totalCurrency(new Number(product.total))}</td>\n                                                                            </tr>\n                                                                        ))\n                                                                    }\n                                                                </tbody>\n\n                                                            </table>\n                                                            <h3 className=\"mt-4\">Total:<span id=\"totalDetalle\">{totalCurrency(new Number(sale.monto))}</span></h3>\n                                                        </div>\n\n                                                        <a href=\"#\" className=\"btn btn-info float-end mt-3 ms-2\">\n                                                            <i className=\"mdi mdi-printer me-1\"></i>Imprimir\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal.Body>\n                            </Modal>\n                        ) : null\n                }\n\n            </div>\n        </div>\n    );\n};\n\nconst Module = () => (\n    <SessionProvider>\n        <SalesReport />\n    </SessionProvider>\n);\n\nroot.render(<Module />);", "import * as React from \"react\";\nimport { useFormik } from \"formik\";\nimport { SessionContext } from \"../../providers/useSession\";\nimport { getBranches, getCustomers, getSalesMen } from \"./request\";\n\nconst SalesFilter = ({ onSubmit }) => {\n    const [session] = React.useContext(SessionContext);\n    const [branchId, setBranchId] = React.useState(() => {\n        if(session.rol === \"2\"){\n            return session.idSucursal;\n        }\n        return 0;\n    });\n    const [branches, setBranches] = React.useState([]);\n    const [customers, setCustomers] = React.useState([]);\n    const [salesMen, setSalesMen] = React.useState([]);\n\n    const loadBranches = React.useCallback(async () => {\n        const branches = await getBranches();\n        setBranches(branches);\n    }, []);\n\n    const loadSalesMens = React.useCallback(async () => {\n        if(branchId){\n            const salesMens = await getSalesMen(branchId);\n            setSalesMen(salesMens);    \n        }\n    }, [branchId]);\n\n    const loadCustomers = React.useCallback(async () => {\n        const customers = await getCustomers();\n        setCustomers(customers);\n    }, []);\n    \n    React.useEffect(() => {\n        (async () => {\n            loadBranches();\n            loadCustomers();\n        })();\n    }, []);\n\n    React.useEffect(() => {\n       loadSalesMens();\n    },[loadSalesMens]);\n\n    const formik = useFormik({\n        initialValues:{\n            branch:0,\n            vendor: 0,\n            customer: 0,\n            initDate:\"\",\n            endDate:\"\"\n        },\n        onSubmit\n    });\n\n    return (\n        <>\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"mb-3\">\n                    {\n                        session.rol === \"1\" ?\n                            (\n                                <select name=\"branch\" \n                                    id=\"idSucursal\" \n                                    value={formik.values.branch}\n                                    onChange={(e) => {\n                                        formik.handleChange(e);\n                                        setBranchId(e.target.value);\n                                    }}>\n                                    <option value={0}> --- Sucursal ---</option>\n                                    {\n                                        branches.map((branch, id) => (\n                                            <option key={id} value={branch.idSucursal}>{branch.sucursal}</option>\n                                        ))\n                                    }\n                                </select>\n                            ) : null\n                    }\n\n                    <select name=\"vendor\" id=\"idVendedor\" value={formik.values.salesMan} onChange={formik.handleChange}>\n                        <option value={0}> --- Vendedor ---</option>\n                        {\n                            salesMen.map((salesMan, id) => (\n                                <option key={id} value={salesMan.idUsuario}>{salesMan.nombre}</option>\n                            ))\n                        }\n                    </select>\n                    <select name=\"customer\" id=\"idCliente\" value={formik.values.customer} onChange={formik.handleChange}>\n                        <option value=\"\">\n                            --- Cliente ---\n                        </option>\n                        {\n                            customers.map((customer, id) => (\n                                <option key={id} value={customer.idCliente}>{customer.nombre}</option>\n                            ))\n                        }\n                    </select>\n                    Fecha Inicio:\n                    <input type=\"date\" name=\"initDate\" id=\"\" value={formik.values.initDate} onChange={formik.handleChange}/>\n                    Fecha Fin:\n                    <input type=\"date\" name=\"endDate\" id=\"\" value={formik.values.endDate} onChange={formik.handleChange}/>\n                </div>\n\n                <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Buscar\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n\n};\n\nexport default SalesFilter;", "import { post, get } from \"../../utils/http\";\n\nconst getSales = async ({ vendor, customer, branch, initDate, endDate }) => {\n    vendor = vendor == 0 ? \"\": vendor;\n    customer = customer == 0? \"\": customer;\n    branch = branch == 0? \"\": branch;\n    const {data} = await get(\n        `/controller/ventas/listar.php?idSucursal=${branch}&idVendedor=${vendor}&idCliente=${customer}&fechaInicio=${initDate}&fechaFin=${endDate}`\n        );\n    return data;\n};\n\nconst getProductsSale = async (idSale) => {\n    const {data} = await get(\"/controller/ventas/listar_productos?idVenta=\"+ idSale);\n    return data;\n}\n\nconst removeSales = async (idSale, idSucursal) => {\n    const { data } = await post(\"/controller/ventas/eliminar.php\", { venta: idSale, sucursal: idSucursal});\n    return data;\n};\n\nconst getBranches = async () => {\n    const { data } = await get(\"/controller/sucursales/listar.php\");\n    return data;\n};\n\nconst getSalesMen = async (idBranch) => {\n    const { data } = await get(\"/controller/usuarios/listar.php?idSucursal=\" + idBranch);\n    return data;\n}\n\nconst getCustomers = async () => {\n    const { data } = await get(\"/controller/clientes/filtro.php?filter=\");\n    return data.data;\n}\n\nexport {\n    getBranches,\n    getCustomers,\n    getSales,\n    getSalesMen,\n    removeSales,\n    getProductsSale\n}", "import * as React from \"react\";\nimport DataTable from \"react-data-table-component\";\n\nconst SalesReportTable = ({ sales, onDelete, onView }) => {\n    const columns = [\n        {\n            name: \"Vendedor\",\n            selector: row => row.vendedor\n        },\n        {\n            name: \"Fecha/Hora\",\n            selector: row => row.fecha\n        },\n        {\n            name: \"Monto\",\n            selector: row => row.monto\n        },\n        {\n            name: \"Acciones\",\n            cell: (row) => {\n                return (\n                    <>\n                        <button className=\"btn btn-iconbtn btn-sm\" onClick={() => handleView(row)}>\n                            <i className=\"fas fa-edit\" style={{ color: \"#278CCD\" }}></i>\n                        </button>\n                        <button className=\"btn btn-iconbtn btn-sm\" onClick={() => handleDelete(row)}>\n                            <i className=\"fas fa-trash-alt\" style={{ color: \"red\" }}></i>\n                        </button>\n                    </>\n                );\n            }\n        }\n    ];\n\n    const handleView = (sale) => {\n        onView(sale);\n    }\n\n    const handleDelete = (sale) => {\n        onDelete(sale);\n    }\n\n    return (\n        <>\n            <DataTable\n                columns={columns}\n                data={sales}\n                pagination>\n            </DataTable>\n        </>\n    );\n}\n\nexport default SalesReportTable;"],
  "mappings": "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",
  "names": []
}
