{
  "version": 3,
  "sources": ["../../../../web/js/modules/report-sales/index.js", "../../../../web/js/modules/report-sales/filtros.js", "../../../../web/js/modules/report-sales/request.js", "../../../../web/js/modules/report-sales/table.js"],
  "sourcesContent": ["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { SessionContext, SessionProvider } from \"../../providers/useSession\";\nimport SalesFilter from \"./filtros\";\nimport { getProductsSale, getSales, removeSales } from \"./request\";\nimport SalesReportTable from \"./table\";\nimport { Modal } from \"react-bootstrap\";\nimport { totalCurrency } from \"../../utils/functions\";\n\nconst container = document.getElementById(\"divContainer\");\nconst root = createRoot(container);\n\nconst SalesReport = () => {\n    const [session] = React.useContext(SessionContext);\n    const [sales, setSales] = React.useState([]);\n    const [sale, setSale] = React.useState(null);\n    const [sucursal, setSucursal] = React.useState(0);\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const handleView = (sale) => {\n        getProductsSale(sale.idVenta)\n            .then((res) => {\n                sale.products = res;\n                setSale(sale);\n                setOpenModal(true);\n            });\n    }\n\n    const handleDelete = (sale) => {\n        (async () => {\n            const idSucursal  = (session.rol == 1)? sucursal : session.idSucursal;\n            const res = await removeSales(sale.idVenta, idSucursal);\n            setSales([]);\n        })();\n    }\n\n    const submitFilters = async (filters) => {\n        const sales = await getSales(filters);\n        setSucursal(filters.branch);\n        setSales(sales);\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h5>Reporte de Ventas</h5>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h6>Filtros</h6>\n                            <SalesFilter onSubmit={submitFilters}></SalesFilter>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"table-responsive\">\n                                <SalesReportTable\n                                    sales={sales}\n                                    onDelete={handleDelete}\n                                    onView={handleView}>\n                                </SalesReportTable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                {\n                    sale ?\n                        (\n                            <Modal show={openModal} onHide={() => {\n                                setOpenModal(false);\n                                setSale(null);\n                            }}>\n                                <Modal.Body>\n                                    <div className=\"row row-sm\">\n                                        <div className=\"col-md-12 col-xl-12\">\n                                            <div className=\" main-content-body-invoice\">\n                                                <div className=\"card card-invoice\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"invoice-header\">\n                                                            <h1 className=\"invoice-title\">Nota</h1>\n                                                            <div className=\"billed-from\">\n                                                                <h6 id=\"ventaDireccion\">{sale.direccion}</h6>\n                                                                <p><br />\n                                                                    <br />\n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row mg-t-20\">\n                                                            <div className=\"col-md\">\n                                                                <label className=\"tx-gray-600\">Cliente:</label>\n                                                                <div className=\"billed-to\">\n                                                                    <h6 id=\"clienteDetalle\">{sale.cliente}</h6>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md\">\n                                                                <label className=\"tx-gray-600\">Infomacion de la nota:</label>\n                                                                <p className=\"invoice-info-row\"><span><small>Nota No.</small></span> <span><small id=\"idDetalle\">{sale.idVenta.padStart(3, \"0\")}</small></span></p>\n                                                                <p className=\"invoice-info-row\"><span><small>Vendedor:</small></span> <span><small id=\"vendedorDetalle\">{sale.vendedor}</small></span></p>\n                                                                <p className=\"invoice-info-row\"><span><small>Fecha y Hora:</small></span> <span><small id=\"fechaDetalle\">{sale.fecha}</small></span></p>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"table-responsive mg-t-40\">\n                                                            <table id=\"tablaProductosDetalle\" className=\"table table-invoice border text-md-nowrap mb-0\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th><small>Producto</small></th>\n                                                                        <th><small>Precio</small></th>\n                                                                        <th><small>Cantidad</small></th>\n                                                                        <th><small>Total</small></th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {\n                                                                        sale.products.map((product, id) => (\n                                                                            <tr key={id}>\n                                                                                <td>{product.nombre}</td>\n                                                                                <td>{product.precio}</td>\n                                                                                <td>{product.cantidad}</td>\n                                                                                <td>{totalCurrency(new Number(product.total))}</td>\n                                                                            </tr>\n                                                                        ))\n                                                                    }\n                                                                </tbody>\n\n                                                            </table>\n                                                            <h3 className=\"mt-4\">Total:<span id=\"totalDetalle\">{totalCurrency(new Number(sale.monto))}</span></h3>\n                                                        </div>\n\n                                                        <a href=\"#\" className=\"btn btn-info float-end mt-3 ms-2\">\n                                                            <i className=\"mdi mdi-printer me-1\"></i>Imprimir\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal.Body>\n                            </Modal>\n                        ) : null\n                }\n\n            </div>\n        </div>\n    );\n};\n\nconst Module = () => (\n    <SessionProvider>\n        <SalesReport />\n    </SessionProvider>\n);\n\nroot.render(<Module />);", "import * as React from \"react\";\nimport { useFormik } from \"formik\";\nimport { SessionContext } from \"../../providers/useSession\";\nimport { getBranches, getCustomers, getSalesMen } from \"./request\";\n\nconst SalesFilter = ({ onSubmit }) => {\n    const [session] = React.useContext(SessionContext);\n    const [branchId, setBranchId] = React.useState(() => {\n        if(session.rol === \"2\"){\n            return session.idSucursal;\n        }\n        return 0;\n    });\n    const [branches, setBranches] = React.useState([]);\n    const [customers, setCustomers] = React.useState([]);\n    const [salesMen, setSalesMen] = React.useState([]);\n\n    const loadBranches = React.useCallback(async () => {\n        const branches = await getBranches();\n        setBranches(branches);\n    }, []);\n\n    const loadSalesMens = React.useCallback(async () => {\n        if(branchId){\n            const salesMens = await getSalesMen(branchId);\n            setSalesMen(salesMens);    \n        }\n    }, [branchId]);\n\n    const loadCustomers = React.useCallback(async () => {\n        const customers = await getCustomers();\n        setCustomers(customers);\n    }, []);\n    \n    React.useEffect(() => {\n        (async () => {\n            loadBranches();\n            loadCustomers();\n        })();\n    }, []);\n\n    React.useEffect(() => {\n       loadSalesMens();\n    },[loadSalesMens]);\n\n    const formik = useFormik({\n        initialValues:{\n            branch:0,\n            vendor: 0,\n            customer: 0,\n            initDate:\"\",\n            endDate:\"\"\n        },\n        onSubmit\n    });\n\n    return (\n        <>\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"mb-3\">\n                    {\n                        session.rol === \"1\" ?\n                            (\n                                <select name=\"branch\" \n                                    id=\"idSucursal\" \n                                    value={formik.values.branch}\n                                    onChange={(e) => {\n                                        formik.handleChange(e);\n                                        setBranchId(e.target.value);\n                                    }}>\n                                    <option value={0}> --- Sucursal ---</option>\n                                    {\n                                        branches.map((branch, id) => (\n                                            <option key={id} value={branch.idSucursal}>{branch.sucursal}</option>\n                                        ))\n                                    }\n                                </select>\n                            ) : null\n                    }\n\n                    <select name=\"vendor\" id=\"idVendedor\" value={formik.values.salesMan} onChange={formik.handleChange}>\n                        <option value={0}> --- Vendedor ---</option>\n                        {\n                            salesMen.map((salesMan, id) => (\n                                <option key={id} value={salesMan.idUsuario}>{salesMan.nombre}</option>\n                            ))\n                        }\n                    </select>\n                    <select name=\"customer\" id=\"idCliente\" value={formik.values.customer} onChange={formik.handleChange}>\n                        <option value=\"\">\n                            --- Cliente ---\n                        </option>\n                        {\n                            customers.map((customer, id) => (\n                                <option key={id} value={customer.idCliente}>{customer.nombre}</option>\n                            ))\n                        }\n                    </select>\n                    Fecha Inicio:\n                    <input type=\"date\" name=\"initDate\" id=\"\" value={formik.values.initDate} onChange={formik.handleChange}/>\n                    Fecha Fin:\n                    <input type=\"date\" name=\"endDate\" id=\"\" value={formik.values.endDate} onChange={formik.handleChange}/>\n                </div>\n\n                <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Buscar\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n\n};\n\nexport default SalesFilter;", "import { post, get } from \"../../utils/http\";\n\nconst getSales = async ({ vendor, customer, branch, initDate, endDate }) => {\n    vendor = vendor == 0 ? \"\": vendor;\n    customer = customer == 0? \"\": customer;\n    branch = branch == 0? \"\": branch;\n    const {data} = await get(\n        `/controller/ventas/listar.php?idSucursal=${branch}&idVendedor=${vendor}&idCliente=${customer}&fechaInicio=${initDate}&fechaFin=${endDate}`\n        );\n    return data;\n};\n\nconst getProductsSale = async (idSale) => {\n    const {data} = await get(\"/controller/ventas/listar_productos?idVenta=\"+ idSale);\n    return data;\n}\n\nconst removeSales = async (idSale, idSucursal) => {\n    const { data } = await post(\"/controller/ventas/eliminar.php\", { venta: idSale, sucursal: idSucursal});\n    return data;\n};\n\nconst getBranches = async () => {\n    const { data } = await get(\"/controller/sucursales/listar.php\");\n    return data;\n};\n\nconst getSalesMen = async (idBranch) => {\n    const { data } = await get(\"/controller/usuarios/listar.php?idSucursal=\" + idBranch);\n    return data;\n}\n\nconst getCustomers = async () => {\n    const { data } = await get(\"/controller/clientes/filtro.php?filter=\");\n    return data.data;\n}\n\nexport {\n    getBranches,\n    getCustomers,\n    getSales,\n    getSalesMen,\n    removeSales,\n    getProductsSale\n}", "import * as React from \"react\";\nimport DataTable from \"react-data-table-component\";\n\nconst SalesReportTable = ({ sales, onDelete, onView }) => {\n    const columns = [\n        {\n            name: \"Vendedor\",\n            selector: row => row.vendedor\n        },\n        {\n            name: \"Fecha/Hora\",\n            selector: row => row.fecha\n        },\n        {\n            name: \"Monto\",\n            selector: row => row.monto\n        },\n        {\n            name: \"Acciones\",\n            cell: (row) => {\n                return (\n                    <>\n                        <button className=\"btn btn-iconbtn btn-sm\" onClick={() => handleView(row)}>\n                            <i className=\"fas fa-edit\" style={{ color: \"#278CCD\" }}></i>\n                        </button>\n                        <button className=\"btn btn-iconbtn btn-sm\" onClick={() => handleDelete(row)}>\n                            <i className=\"fas fa-trash-alt\" style={{ color: \"red\" }}></i>\n                        </button>\n                    </>\n                );\n            }\n        }\n    ];\n\n    const handleView = (sale) => {\n        onView(sale);\n    }\n\n    const handleDelete = (sale) => {\n        onDelete(sale);\n    }\n\n    return (\n        <>\n            <DataTable\n                columns={columns}\n                data={sales}\n                pagination>\n            </DataTable>\n        </>\n    );\n}\n\nexport default SalesReportTable;"],
  "mappings": "mLAAA,MAAuB,OACvB,EAA2B,OCD3B,MAAuB,OCEvB,GAAM,GAAW,MAAO,CAAE,SAAQ,WAAU,SAAQ,WAAU,aAAc,CACxE,EAAS,GAAU,EAAI,GAAI,EAC3B,EAAW,GAAY,EAAG,GAAI,EAC9B,EAAS,GAAU,EAAG,GAAI,EAC1B,GAAM,CAAC,QAAQ,KAAM,GACjB,4CAA4C,gBAAqB,eAAoB,iBAAwB,cAAqB,GAClI,EACJ,MAAO,EACX,EAEM,EAAkB,KAAO,IAAW,CACtC,GAAM,CAAC,QAAQ,KAAM,GAAI,+CAAgD,CAAM,EAC/E,MAAO,EACX,EAEM,EAAc,MAAO,EAAQ,IAAe,CAC9C,GAAM,CAAE,QAAS,KAAM,GAAK,kCAAmC,CAAE,MAAO,EAAQ,SAAU,CAAU,CAAC,EACrG,MAAO,EACX,EAEM,EAAc,SAAY,CAC5B,GAAM,CAAE,QAAS,KAAM,GAAI,mCAAmC,EAC9D,MAAO,EACX,EAEM,EAAc,KAAO,IAAa,CACpC,GAAM,CAAE,QAAS,KAAM,GAAI,8CAAgD,CAAQ,EACnF,MAAO,EACX,EAEM,EAAe,SAAY,CAC7B,GAAM,CAAE,QAAS,KAAM,GAAI,yCAAyC,EACpE,MAAO,GAAK,IAChB,ED9BA,GAAM,GAAc,CAAC,CAAE,cAAe,CAClC,GAAM,CAAC,GAAW,AAAM,aAAW,CAAc,EAC3C,CAAC,EAAU,GAAe,AAAM,WAAS,IACxC,EAAQ,MAAQ,IACR,EAAQ,WAEZ,CACV,EACK,CAAC,EAAU,GAAe,AAAM,WAAS,CAAC,CAAC,EAC3C,CAAC,EAAW,GAAgB,AAAM,WAAS,CAAC,CAAC,EAC7C,CAAC,EAAU,GAAe,AAAM,WAAS,CAAC,CAAC,EAE3C,EAAe,AAAM,cAAY,SAAY,CAC/C,GAAM,GAAW,KAAM,GAAY,EACnC,EAAY,CAAQ,CACxB,EAAG,CAAC,CAAC,EAEC,EAAgB,AAAM,cAAY,SAAY,CAChD,GAAG,EAAS,CACR,GAAM,GAAY,KAAM,GAAY,CAAQ,EAC5C,EAAY,CAAS,CACzB,CACJ,EAAG,CAAC,CAAQ,CAAC,EAEP,EAAgB,AAAM,cAAY,SAAY,CAChD,GAAM,GAAY,KAAM,GAAa,EACrC,EAAa,CAAS,CAC1B,EAAG,CAAC,CAAC,EAEL,AAAM,YAAU,IAAM,CAClB,AAAC,UACG,GAAa,EACb,EAAc,IACf,CACP,EAAG,CAAC,CAAC,EAEL,AAAM,YAAU,IAAM,CACnB,EAAc,CACjB,EAAE,CAAC,CAAa,CAAC,EAEjB,GAAM,GAAS,EAAU,CACrB,cAAc,CACV,OAAO,EACP,OAAQ,EACR,SAAU,EACV,SAAS,GACT,QAAQ,EACZ,EACA,UACJ,CAAC,EAED,MACI,iCACI,gBAAC,QAAK,SAAU,EAAO,cACnB,gBAAC,OAAI,UAAU,QAEP,EAAQ,MAAQ,IAER,gBAAC,UAAO,KAAK,SACT,GAAG,aACH,MAAO,EAAO,OAAO,OACrB,SAAU,AAAC,GAAM,CACb,EAAO,aAAa,CAAC,EACrB,EAAY,EAAE,OAAO,KAAK,CAC9B,GACA,gBAAC,UAAO,MAAO,GAAG,mBAAiB,EAE/B,EAAS,IAAI,CAAC,EAAQ,IAClB,gBAAC,UAAO,IAAK,EAAI,MAAO,EAAO,YAAa,EAAO,QAAS,CAC/D,CAET,EACA,KAGZ,gBAAC,UAAO,KAAK,SAAS,GAAG,aAAa,MAAO,EAAO,OAAO,SAAU,SAAU,EAAO,cAClF,gBAAC,UAAO,MAAO,GAAG,mBAAiB,EAE/B,EAAS,IAAI,CAAC,EAAU,IACpB,gBAAC,UAAO,IAAK,EAAI,MAAO,EAAS,WAAY,EAAS,MAAO,CAChE,CAET,EACA,gBAAC,UAAO,KAAK,WAAW,GAAG,YAAY,MAAO,EAAO,OAAO,SAAU,SAAU,EAAO,cACnF,gBAAC,UAAO,MAAM,IAAG,iBAEjB,EAEI,EAAU,IAAI,CAAC,EAAU,IACrB,gBAAC,UAAO,IAAK,EAAI,MAAO,EAAS,WAAY,EAAS,MAAO,CAChE,CAET,EAAS,gBAET,gBAAC,SAAM,KAAK,OAAO,KAAK,WAAW,GAAG,GAAG,MAAO,EAAO,OAAO,SAAU,SAAU,EAAO,aAAa,EAAE,aAExG,gBAAC,SAAM,KAAK,OAAO,KAAK,UAAU,GAAG,GAAG,MAAO,EAAO,OAAO,QAAS,SAAU,EAAO,aAAa,CACxG,EAEA,gBAAC,WACG,gBAAC,UAAO,KAAK,SAAS,UAAU,mBAAkB,QAElD,CACJ,CACJ,CACJ,CAGR,EAEO,EAAQ,EEnHf,MAAuB,OACvB,EAAsB,OAEhB,EAAmB,CAAC,CAAE,QAAO,WAAU,YAAa,CACtD,GAAM,GAAU,CACZ,CACI,KAAM,WACN,SAAU,GAAO,EAAI,QACzB,EACA,CACI,KAAM,aACN,SAAU,GAAO,EAAI,KACzB,EACA,CACI,KAAM,QACN,SAAU,GAAO,EAAI,KACzB,EACA,CACI,KAAM,WACN,KAAM,AAAC,GAEC,gCACI,gBAAC,UAAO,UAAU,yBAAyB,QAAS,IAAM,EAAW,CAAG,GACpE,gBAAC,KAAE,UAAU,cAAc,MAAO,CAAE,MAAO,SAAU,EAAG,CAC5D,EACA,gBAAC,UAAO,UAAU,yBAAyB,QAAS,IAAM,EAAa,CAAG,GACtE,gBAAC,KAAE,UAAU,mBAAmB,MAAO,CAAE,MAAO,KAAM,EAAG,CAC7D,CACJ,CAGZ,CACJ,EAEM,EAAa,AAAC,GAAS,CACzB,EAAO,CAAI,CACf,EAEM,EAAe,AAAC,GAAS,CAC3B,EAAS,CAAI,CACjB,EAEA,MACI,iCACI,gBAAC,WACG,QAAS,EACT,KAAM,EACN,WAAU,GACd,CACJ,CAER,EAEO,EAAQ,EH5Cf,GAAM,GAAY,SAAS,eAAe,cAAc,EAClD,EAAO,iBAAW,CAAS,EAE3B,EAAc,IAAM,CACtB,GAAM,CAAC,GAAW,AAAM,aAAW,CAAc,EAC3C,CAAC,EAAO,GAAY,AAAM,WAAS,CAAC,CAAC,EACrC,CAAC,EAAM,GAAW,AAAM,WAAS,IAAI,EACrC,CAAC,EAAU,GAAe,AAAM,WAAS,CAAC,EAC1C,CAAC,EAAW,GAAgB,AAAM,WAAS,EAAK,EAyBtD,MACI,iBAAC,OAAI,UAAU,OACX,gBAAC,OAAI,UAAU,QACX,gBAAC,OAAI,UAAU,aACX,gBAAC,UAAG,mBAAiB,EACrB,gBAAC,OAAI,UAAU,OACX,gBAAC,OAAI,UAAU,OACX,gBAAC,UAAG,SAAO,EACX,gBAAC,GAAY,SAdf,KAAO,IAAY,CACrC,GAAM,GAAQ,KAAM,GAAS,CAAO,EACpC,EAAY,EAAQ,MAAM,EAC1B,EAAS,CAAK,CAClB,EAU8D,CAC1C,CACJ,EACA,gBAAC,OAAI,UAAU,OACX,gBAAC,OAAI,UAAU,OACX,gBAAC,OAAI,UAAU,oBACX,gBAAC,GACG,MAAO,EACP,SA9BX,AAAC,GAAS,CAC3B,AAAC,UAAY,CACT,GAAM,GAAe,EAAQ,KAAO,EAAI,EAAW,EAAQ,WACrD,EAAM,KAAM,GAAY,EAAK,QAAS,CAAU,EACtD,EAAS,CAAC,CAAC,CACf,GAAG,CACP,EAyBgC,OAxCb,AAAC,GAAS,CACzB,EAAgB,EAAK,OAAO,EACvB,KAAK,AAAC,GAAQ,CACX,EAAK,SAAW,EAChB,EAAQ,CAAI,EACZ,EAAa,EAAI,CACrB,CAAC,CACT,EAkC4B,CACJ,CACJ,CACJ,CACJ,CACJ,EACA,gBAAC,WAEO,EAEQ,gBAAC,GAAM,KAAM,EAAW,OAAQ,IAAM,CAClC,EAAa,EAAK,EAClB,EAAQ,IAAI,CAChB,GACI,gBAAC,EAAM,KAAN,KACG,gBAAC,OAAI,UAAU,cACX,gBAAC,OAAI,UAAU,uBACX,gBAAC,OAAI,UAAU,8BACX,gBAAC,OAAI,UAAU,qBACX,gBAAC,OAAI,UAAU,aACX,gBAAC,OAAI,UAAU,kBACX,gBAAC,MAAG,UAAU,iBAAgB,MAAI,EAClC,gBAAC,OAAI,UAAU,eACX,gBAAC,MAAG,GAAG,kBAAkB,EAAK,SAAU,EACxC,gBAAC,SAAE,gBAAC,SAAG,EACH,gBAAC,SAAG,CACR,CACJ,CACJ,EACA,gBAAC,OAAI,UAAU,eACX,gBAAC,OAAI,UAAU,UACX,gBAAC,SAAM,UAAU,eAAc,UAAQ,EACvC,gBAAC,OAAI,UAAU,aACX,gBAAC,MAAG,GAAG,kBAAkB,EAAK,OAAQ,CAC1C,CACJ,EACA,gBAAC,OAAI,UAAU,UACX,gBAAC,SAAM,UAAU,eAAc,wBAAsB,EACrD,gBAAC,KAAE,UAAU,oBAAmB,gBAAC,YAAK,gBAAC,aAAM,UAAQ,CAAQ,EAAO,IAAC,gBAAC,YAAK,gBAAC,SAAM,GAAG,aAAa,EAAK,QAAQ,SAAS,EAAG,GAAG,CAAE,CAAQ,CAAO,EAC/I,gBAAC,KAAE,UAAU,oBAAmB,gBAAC,YAAK,gBAAC,aAAM,WAAS,CAAQ,EAAO,IAAC,gBAAC,YAAK,gBAAC,SAAM,GAAG,mBAAmB,EAAK,QAAS,CAAQ,CAAO,EACtI,gBAAC,KAAE,UAAU,oBAAmB,gBAAC,YAAK,gBAAC,aAAM,eAAa,CAAQ,EAAO,IAAC,gBAAC,YAAK,gBAAC,SAAM,GAAG,gBAAgB,EAAK,KAAM,CAAQ,CAAO,CACxI,CACJ,EACA,gBAAC,OAAI,UAAU,4BACX,gBAAC,SAAM,GAAG,wBAAwB,UAAU,kDACxC,gBAAC,aACG,gBAAC,UACG,gBAAC,UAAG,gBAAC,aAAM,UAAQ,CAAQ,EAC3B,gBAAC,UAAG,gBAAC,aAAM,QAAM,CAAQ,EACzB,gBAAC,UAAG,gBAAC,aAAM,UAAQ,CAAQ,EAC3B,gBAAC,UAAG,gBAAC,aAAM,OAAK,CAAQ,CAC5B,CACJ,EACA,gBAAC,aAEO,EAAK,SAAS,IAAI,CAAC,EAAS,IACxB,gBAAC,MAAG,IAAK,GACL,gBAAC,UAAI,EAAQ,MAAO,EACpB,gBAAC,UAAI,EAAQ,MAAO,EACpB,gBAAC,UAAI,EAAQ,QAAS,EACtB,gBAAC,UAAI,EAAc,GAAI,QAAO,EAAQ,KAAK,CAAC,CAAE,CAClD,CACH,CAET,CAEJ,EACA,gBAAC,MAAG,UAAU,QAAO,SAAM,gBAAC,QAAK,GAAG,gBAAgB,EAAc,GAAI,QAAO,EAAK,KAAK,CAAC,CAAE,CAAO,CACrG,EAEA,gBAAC,KAAE,KAAK,IAAI,UAAU,oCAClB,gBAAC,KAAE,UAAU,uBAAuB,EAAI,UAC5C,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,EACA,IAGhB,CACJ,CAER,EAEM,EAAS,IACX,gBAAC,OACG,gBAAC,MAAY,CACjB,EAGJ,EAAK,OAAO,gBAAC,MAAO,CAAE",
  "names": []
}
