{
  "version": 3,
  "sources": ["../../../../web/js/modules/sales/index.js", "../../../../web/js/providers/useSale.js", "../../../../web/js/modules/sales/breadcrum.js", "../../../../web/js/modules/sales/sale-detail.js", "../../../../web/js/modules/sales/tabla.js"],
  "sourcesContent": ["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { CustomerProvider, CustomerContext } from \"../../providers/useCustomerProvider\";\nimport { SalesContext, SalesProvider } from \"../../providers/useSale\";\nimport { FONDO_KEY } from \"../../utils/constants\";\nimport { \n    getCusotmerPrice, \n    getItemLocalStorage, \n    hasItemLocalStorage, \n    removeItemLocalStorage, \n    setItemLocalStorage \n} from \"../../utils/functions\";\nimport SaleBreadcrum from \"./breadcrum\";\nimport { modals } from \"./constants\";\nimport { \n    CloseCashRegister,\n    FindCustomerModal,\n    FindProductModal,\n    OpenCashRegister,\n    PaidSale \n} from \"./modals\";\nimport { anyProductInStock, closeCashRegiser, closeSale, } from \"./request\";\nimport SaleDetail from \"./sale-detail\";\nimport ProductsSalesTable from \"./tabla\";\n\nconst container = document.getElementById(\"divContainer\");\nconst root = createRoot(container);\n\nconst initModals = {\n    findProduct: false,\n    findCustomer: false,\n    closeCash: false,\n    openCash: false,\n    paidSale: false,\n};\n\nconst reducer = (state, action) => {\n    switch (action.modal) {\n        case modals.findProduct:\n            return { ...state, [action.modal]: action.value };\n        case modals.findCustomer:\n            return { ...state, [action.modal]: action.value };\n        case modals.paidSale:\n            return { ...state, [action.modal]: action.value };\n        case modals.openCash:\n            return { ...state, [action.modal]: action.value };\n        case modals.closeCash:\n            return { ...state, [action.modal]: action.value };\n    }\n}\n\n\nconst Sales = () => {\n    const { removeCustomerToSale, customer } = React.useContext(CustomerContext);\n    const {\n        products,\n        addProductToSale,\n        removeProductToSale,\n        emptyProducsToSale,\n        updateQuantityProduct\n    } = React.useContext(SalesContext);\n\n    const [fondoCaja, setFondoCaja] = React.useState(() => {\n        if (hasItemLocalStorage(FONDO_KEY)) {\n            const fondo = JSON.parse(getItemLocalStorage(FONDO_KEY));\n            return fondo;\n        } else {\n            return null;\n        }\n    });\n    const [totalSale, setTotalSale] = React.useState(0);\n\n    const [modalsState, dispatchModals] = React.useReducer(reducer, initModals);\n\n    const handleCloseModal = (modal) => dispatchModals({ modal, value: false });\n\n    const cancelSale = () => {\n        emptyProducsToSale();\n        removeCustomerToSale();\n    }\n\n    const closeSaleModal = () => {\n        dispatchModals({ modal: modals.paidSale, value: true })\n    }\n\n    const handleAddProduct = (product) => {\n        (async () => {\n            const anyProduct = await anyProductInStock(product);\n\n            if (anyProduct) {\n                addProductToSale(product);\n                dispatchModals({ modal: modals.findProduct, value: false });\n            } else {\n\n            }\n        })();\n    }\n\n    React.useEffect(() => {\n        (() => {\n            const total = products.reduce((sum, product) => sum += (product.cantidad * getCusotmerPrice(customer, product)), 0);\n            setTotalSale(total);\n        })();\n    }, [products, customer]);\n\n    React.useEffect(() => {\n        if (!fondoCaja) {\n            dispatchModals({ modal: modals.openCash, value: true });\n        }\n    }, []);\n\n    React.useEffect(() => {\n        setItemLocalStorage(FONDO_KEY, JSON.stringify(fondoCaja));\n    }, [fondoCaja]);\n\n\n    return (\n        <>\n            <SaleBreadcrum openModal={({ modal, value }) => {\n                dispatchModals({ modal, value });\n            }} />\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col table-responsive\">\n                                    <ProductsSalesTable\n                                        total={totalSale}\n                                        onDeleteProduct={(product) => { removeProductToSale(product) }}\n                                        onUpdateQuantity={(product, cantidad) => { updateQuantityProduct(product, cantidad) }}></ProductsSalesTable>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <SaleDetail\n                    total={totalSale}\n                    onCloseSale={closeSaleModal}\n                    onCancelSale={cancelSale} />\n            </div>\n            <FindProductModal\n                show={modalsState.findProduct}\n                onClose={handleCloseModal}\n                selectedProduct={handleAddProduct} />\n            <FindCustomerModal\n                show={modalsState.findCustomer}\n                onClose={handleCloseModal} />\n            <PaidSale\n                show={modalsState.paidSale}\n                onClose={handleCloseModal}\n                total={totalSale}\n                onPaid={async ({ total, cambio, paid }) => {\n                    const { data, success } = await closeSale({ total, cambio, paid, customer, products });\n                    if (success) {\n                        cancelSale();\n                    }\n                }} />\n            <OpenCashRegister\n                show={modalsState.openCash}\n                onClose={handleCloseModal}\n                onPaid={({ id, monto }) => {\n                    setFondoCaja({ id, monto });\n                }} />\n            <CloseCashRegister\n                show={modalsState.closeCash}\n                onClose={handleCloseModal}\n                montoInicial={fondoCaja?.monto || 0}\n                onPaid={async (total) => {\n                    const { data, success } = await closeCashRegiser(fondoCaja.id, total);\n                    if (success) {\n                        removeItemLocalStorage(FONDO_KEY);\n                    }\n                }} />\n        </>\n    );\n};\n\nconst Module = () => {\n    return (\n        <CustomerProvider>\n            <SalesProvider>\n                <Sales />\n            </SalesProvider>\n        </CustomerProvider>\n    );\n};\n\nroot.render(<Module></Module>);", "import * as React from \"react\";\nimport { PRODUCTOS_VENTA_KEY } from \"../utils/constants\";\nimport {\n    getCusotmerPrice,\n    getItemLocalStorage,\n    hasItemLocalStorage,\n    setItemLocalStorage\n} from \"../utils/functions\";\nimport { CustomerContext } from \"./useCustomerProvider\";\n\nconst SalesContext = React.createContext();\n\nconst SalesProvider = ({ children }) => {\n    const { customer } = React.useContext(CustomerContext);\n    const [products, setProducts] = React.useState(() => {\n        if (hasItemLocalStorage(PRODUCTOS_VENTA_KEY)) {\n            const loadProducts = JSON.parse(getItemLocalStorage(PRODUCTOS_VENTA_KEY));\n            return loadProducts;\n        } else {\n            return [];\n        }\n    });\n\n    const addProduct = (product) => {\n        const precio = getCusotmerPrice(customer, product);\n        product = {\n            ...product,\n            mayoreo: new Number(product.mayoreo),\n            medida: new Number(product.medida),\n            medio: new Number(product.medio),\n            venta: new Number(product.venta),\n            precio,\n            cantidad: 1\n        };\n\n        setProducts([...products, product]);\n    }\n\n    const checkProductIntoSale = (product) => {\n        return products.findIndex((productInSale) => productInSale.idProducto === product.idProducto) > -1;\n    };\n\n    const getProductIntoSale = (product) => {\n        const index = products.findIndex((producInSale) => producInSale.idProducto === product.idProducto);\n        const producInSale = products[index];\n        return producInSale;\n    }\n\n    const addProductToSale = (product) => {\n        if (checkProductIntoSale(product)) {\n            const producInSale = getProductIntoSale(product);\n            const newCantidad = producInSale.cantidad + 1;\n            updateQuantityProduct(producInSale, newCantidad);\n        } else {\n            addProduct(product);\n        }\n    }\n\n    const updateQuantityProduct = (product, quantity) => {\n        const newCantidad = quantity;\n        const updatedProducts = products.map(\n            (productInSale) =>\n            (productInSale.idProducto === product.idProducto\n                ? { ...productInSale, cantidad: newCantidad } : productInSale)\n        );\n        setProducts(updatedProducts);\n    }\n\n    const removeProductToSale = (product) => {\n        setProducts(products.filter((p) => p.idProducto !== product.idProducto));\n    }\n\n    const emptyProducsToSale = () => {\n        setProducts([]);\n    }\n\n    React.useEffect(() => {\n        (() => {\n            setItemLocalStorage(PRODUCTOS_VENTA_KEY, JSON.stringify(products));\n        })();\n    }, [products, customer]);\n\n    return (\n        <SalesContext.Provider value={\n            {\n                products,\n                addProductToSale,\n                updateQuantityProduct,\n                removeProductToSale,\n                emptyProducsToSale\n            }\n        }>\n            {children}\n        </SalesContext.Provider>\n    );\n};\n\nexport { SalesContext, SalesProvider };\n", "import * as React from \"react\";\nimport { modals } from \"./constants\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { CustomerContext } from \"../../providers/useCustomerProvider\";\n\nconst SaleBreadcrum = ({openModal}) => {\n    const { customer } = React.useContext(CustomerContext);\n    return (\n        <>\n            <div className=\"breadcrumb-header justify-content-between\">\n                <div className=\"my-auto\">\n                    <div className=\"d-flex\">\n                        <h3 className=\"content-title mb-0 my-auto\">Venta</h3>\n                    </div>\n                </div>\n                <div className=\"d-flex my-xl-auto right-content\">\n                    <div className=\"pe-1 mb-xl-0\">\n                        <button type=\"button\" className=\"btn btn-success me-2\" onClick={() => openModal({modal: modals.findCustomer, value: true})}>\n                            <i className=\"bi bi-person-circle\"></i>\n                        </button>\n                    </div>\n                    <div className=\"pe-1 mb-xl-0\">\n                        <button type=\"button\" className=\"btn btn-primary me-2\" disabled={customer === null} onClick={() => openModal({modal: modals.findProduct, value: true})}>\n                            <i className=\"bi bi-search\"></i>\n                        </button>\n                    </div>\n                    <div className=\"mb-xl-0\">\n                        <Dropdown className=\"btn-group dropdown\">\n                            <Dropdown.Toggle variant=\"warning\" id=\"dropdownMenuDate\">\n                               Caja\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => openModal({modal: modals.openCash, value: true})}>Abrir</Dropdown.Item>\n                                <Dropdown.Item onClick={() => openModal({modal: modals.closeCash, value: true})}>Cerrar</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SaleBreadcrum;", "import * as React from \"react\";\nimport { CustomerContext } from \"../../providers/useCustomerProvider\";\nimport { totalCurrency } from \"../../utils/functions\";\n\nconst SaleDetail = ({ total, onCancelSale, onCloseSale }) => {\n    const { customer } = React.useContext(CustomerContext);\n    return (\n        <>\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <dl>\n                                    <dt>Cliente</dt>\n                                    <dd id=\"infoCliente\">{customer?.nombre || \"---\"}</dd>\n\n                                    <dt>Total</dt>\n                                    <dd id=\"totalVentaDetalle\">{totalCurrency(total)}</dd>\n                                </dl>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button id=\"cancelarVenta\" className=\"btn btn-danger mr-1\" onClick={onCancelSale}>Cancelar</button>\n\n                                <button className=\"btn btn-success\" disabled={customer === null} onClick={onCloseSale}>Finalizar</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SaleDetail;", "import * as React from \"react\";\nimport { SalesContext } from \"../../providers/useSale\";\nimport { getCusotmerPrice, totalCurrency } from \"../../utils/functions\";\n\nconst ProductsSalesTable = ({total, onUpdateQuantity, onDeleteProduct }) => {\n    const { products } = React.useContext(SalesContext);\n    return (\n        <>\n            <table className=\"table table-bordered\" >\n                <thead>\n                    <tr>\n                        <td>Producto</td>\n                        <td>Precio</td>\n                        <td>Cantidad</td>\n                        <td>Total</td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody >\n                    {\n                        products.map((product, id) => (\n                            <tr key={id}>\n                                <td>{product.nombre}</td>\n                                <td>{totalCurrency(product.precio)}</td>\n                                <td>\n                                    <input type={\"number\"} min={1} value={product.cantidad} onChange={(e) => onUpdateQuantity(product, e.target.value)}/>\n                                </td>\n                                <td>{totalCurrency(product.cantidad * product.precio)}</td>\n                                <td>\n                                    <button className=\"btn btn-sm btn-danger\" onClick={() => onDeleteProduct(product)}>\n                                        Borrar\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n                <tfoot>\n                    <tr className=\"tx-blod\">\n                        <td colSpan=\"2\"></td>\n                        <td>TOTAL</td>\n                        <td id=\"totalVentaTabla\">{totalCurrency(total)}</td>\n                    </tr>\n                </tfoot>\n            </table>\n        </>\n    );\n}\n\nexport default ProductsSalesTable;"],
  "mappings": "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",
  "names": []
}
