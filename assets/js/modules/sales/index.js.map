{
  "version": 3,
  "sources": ["../../../../web/js/modules/sales/index.js", "../../../../web/js/modules/sales/breadcrum.js", "../../../../web/js/modules/sales/constants.js", "../../../../web/js/modules/sales/modals/closeCashRegister.js", "../../../../web/js/modules/sales/request.js", "../../../../web/js/modules/sales/modals/findCustomer.js", "../../../../web/js/modules/sales/modals/findProduct.js", "../../../../web/js/modules/sales/modals/openCashRegister.js", "../../../../web/js/modules/sales/modals/paidSale.js", "../../../../web/js/modules/sales/sale-detail.js", "../../../../web/js/modules/sales/tabla.js"],
  "sourcesContent": ["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { CLIENTE_VENTA_KEY, FONDO_KEY, PRODUCTOS_VENTA_KEY } from \"../../utils/constants\";\nimport { getCusotmerPrice, getItemLocalStorage, hasItemLocalStorage, removeItemLocalStorage, setItemLocalStorage } from \"../../utils/functions\";\nimport SaleBreadcrum from \"./breadcrum\";\nimport { modals } from \"./constants\";\nimport CloseCashRegister from \"./modals/closeCashRegister\";\nimport FindCustomerModal from \"./modals/findCustomer\";\nimport FindProductModal from \"./modals/findProduct\";\nimport OpenCashRegister from \"./modals/openCashRegister\";\nimport PaidSale from \"./modals/paidSale\";\nimport { anyProductInStock, closeCashRegiser, closeSale,  } from \"./request\";\nimport SaleDetail from \"./sale-detail\";\nimport ProductsSalesTable from \"./tabla\";\n\nconst container = document.getElementById(\"divContainer\");\nconst root = createRoot(container);\n\nconst initModals = {\n    findProduct: false,\n    findCustomer: false,\n    closeCash: false,\n    openCash: false,\n    paidSale: false,\n};\n\nconst reducer = (state, action) => {\n    switch (action.modal) {\n        case modals.findProduct:\n            return { ...state, [action.modal]: action.value };\n        case modals.findCustomer:\n            return { ...state, [action.modal]: action.value };\n        case modals.paidSale:\n            return { ...state, [action.modal]: action.value };\n        case modals.openCash:\n            return { ...state, [action.modal]: action.value };\n        case modals.closeCash:\n            return { ...state, [action.modal]: action.value };\n    }\n}\n\n\nconst Sales = () => {\n    const [products, setProducts] = React.useState(() => {\n        if (hasItemLocalStorage(PRODUCTOS_VENTA_KEY)) {\n            const loadProducts = JSON.parse(getItemLocalStorage(PRODUCTOS_VENTA_KEY));\n            return loadProducts;\n        } else {\n            return [];\n        }\n    });\n    const [customer, setCustomer] = React.useState(() => {\n        if (hasItemLocalStorage(CLIENTE_VENTA_KEY)) {\n            const laodClient = JSON.parse(getItemLocalStorage(CLIENTE_VENTA_KEY));\n            return laodClient;\n        } else {\n            return null\n        }\n    });\n    const [fondoCaja, setFondoCaja] = React.useState(() => {\n        if(hasItemLocalStorage(FONDO_KEY)){\n            const fondo = JSON.parse(getItemLocalStorage(FONDO_KEY));\n            return fondo;\n        } else {\n            return null;\n        }\n    });\n    const [totalSale, setTotalSale] = React.useState(0);\n\n    const [modalsState, dispatchModals] = React.useReducer(reducer, initModals);\n\n    const handleCloseModal = (modal) => dispatchModals({ modal, value: false });\n\n    const addCustomerToSale = (customer) => {\n        customer = {\n            ...customer,\n            idCliente: new Number(customer.idCliente),\n        }\n        setItemLocalStorage(CLIENTE_VENTA_KEY, JSON.stringify(customer));\n        setCustomer(customer);\n    }\n\n    const cancelSale = () => {\n        setProducts([]);\n        setCustomer(null);\n    }\n\n    const closeSaleModal = () => {\n        dispatchModals({ modal: modals.paidSale, value: true })\n    }\n\n    const addProduct = (product) => {\n        console.log(product);\n        const precio = getCusotmerPrice(customer, product);\n        product = {\n            ...product,\n            mayoreo: new Number(product.mayoreo),\n            medida: new Number(product.medida),\n            medio: new Number(product.medio),\n            venta: new Number(product.venta),\n            precio,\n            cantidad: 1\n        };\n        console.log(product);\n\n        setProducts([...products, product]);\n    }\n\n    const increaseAmountProduct = (product, quantity) => {\n        const newCantidad = product.cantidad + quantity;\n        const updatedProducts = products.map((productInSale) => (productInSale.idProducto === product.idProducto ? { ...productInSale, cantidad: newCantidad } : productInSale))\n        setProducts(updatedProducts);\n    }\n\n    const updateQuantityProduct = (product, quantity) => {\n        const newCantidad = quantity;\n        const updatedProducts = products.map((productInSale) => (productInSale.idProducto === product.idProducto ? { ...productInSale, cantidad: newCantidad } : productInSale))\n        setProducts(updatedProducts);\n    }\n\n    const checkProductIntoSale = (product) => {\n        return products.findIndex((productInSale) => productInSale.idProducto === product.idProducto) > -1;\n    };\n\n    const getProductIntoSale = (product) => {\n        const index = products.findIndex((producInSale) => producInSale.idProducto === product.idProducto);\n        const producInSale = products[index];\n        return producInSale;\n    }\n\n    const handleAddProduct = (product) => {\n        (async () => {\n            const anyProduct = await anyProductInStock(product);\n\n            if (anyProduct) {\n                if (checkProductIntoSale(product)) {\n                    const productInSale = getProductIntoSale(product);\n                    increaseAmountProduct(productInSale, 1);\n                } else {\n                    addProduct(product);\n                }\n                dispatchModals({ modal: modals.findProduct, value: false });\n            } else {\n\n            }\n        })();\n    }\n\n    React.useEffect(() => {\n        (() => {\n            setItemLocalStorage(PRODUCTOS_VENTA_KEY, JSON.stringify(products));\n            const total = products.reduce((sum, product) => sum += (product.cantidad * getCusotmerPrice(customer, product)), 0);\n            setTotalSale(total);\n        })();\n    }, [products, customer]);\n\n    React.useEffect(() => {\n        (() => {\n            setItemLocalStorage(CLIENTE_VENTA_KEY, JSON.stringify(customer));\n        })();\n    }, [customer]);\n\n    React.useEffect(() => {\n        if(!fondoCaja){\n            dispatchModals({modal: modals.openCash, value: true});\n        }\n    }, []);\n\n    React.useEffect(() => {\n        setItemLocalStorage(FONDO_KEY, JSON.stringify(fondoCaja));\n    },[fondoCaja]);\n\n\n    return (\n        <>\n            <SaleBreadcrum openModal={({ modal, value }) => {\n                dispatchModals({ modal, value });\n            }}\n                customer={customer}></SaleBreadcrum>\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col table-responsive\">\n                                    <ProductsSalesTable\n                                        products={products}\n                                        total={totalSale}\n                                        onDeleteProduct={() => { }}\n                                        onUpdateQuantity={(product, cantidad) => { updateQuantityProduct(product, cantidad) }}></ProductsSalesTable>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <SaleDetail customer={customer} total={totalSale} onCloseSale={closeSaleModal} onCancelSale={cancelSale}></SaleDetail>\n            </div>\n            <FindProductModal\n                show={modalsState.findProduct}\n                onClose={handleCloseModal}\n                selectedProduct={handleAddProduct}></FindProductModal>\n            <FindCustomerModal\n                show={modalsState.findCustomer}\n                onClose={handleCloseModal}\n                selectedCustomer={addCustomerToSale}></FindCustomerModal>\n            <PaidSale\n                show={modalsState.paidSale}\n                onClose={handleCloseModal}\n                total={totalSale}\n                onPaid={async ({total, cambio, paid}) => {\n                    const {data, success} = await closeSale({total, cambio, paid, customer, products});\n                    if(success){\n                        cancelSale();\n                    }\n                 }}></PaidSale>\n            <OpenCashRegister\n                show={modalsState.openCash}\n                onClose={handleCloseModal}\n                onPaid={({id, monto}) => {\n                    setFondoCaja({id, monto});\n                 }}></OpenCashRegister>\n            <CloseCashRegister \n                show={modalsState.closeCash}\n                onClose={handleCloseModal}\n                montoInicial={fondoCaja?.monto || 0}\n                onPaid={async (total) => {\n                    const {data, success} = await closeCashRegiser(fondoCaja.id, total);\n                    if(success){\n                        removeItemLocalStorage(FONDO_KEY);\n                    }\n                 }}></CloseCashRegister>\n        </>\n    );\n};\n\nroot.render(<Sales></Sales>);", "import * as React from \"react\";\nimport { modals } from \"./constants\";\nimport { Dropdown } from \"react-bootstrap\";\nconst SaleBreadcrum = ({openModal, customer}) => {\n    return (\n        <>\n            <div className=\"breadcrumb-header justify-content-between\">\n                <div className=\"my-auto\">\n                    <div className=\"d-flex\">\n                        <h3 className=\"content-title mb-0 my-auto\">Venta</h3>\n                    </div>\n                </div>\n                <div className=\"d-flex my-xl-auto right-content\">\n                    <div className=\"pe-1 mb-xl-0\">\n                        <button type=\"button\" className=\"btn btn-success me-2\" onClick={() => openModal({modal: modals.findCustomer, value: true})}>\n                            <i className=\"bi bi-person-circle\"></i>\n                        </button>\n                    </div>\n                    <div className=\"pe-1 mb-xl-0\">\n                        <button type=\"button\" className=\"btn btn-primary me-2\" disabled={customer === null} onClick={() => openModal({modal: modals.findProduct, value: true})}>\n                            <i className=\"bi bi-search\"></i>\n                        </button>\n                    </div>\n                    <div className=\"mb-xl-0\">\n                        <Dropdown className=\"btn-group dropdown\">\n                            <Dropdown.Toggle variant=\"warning\" id=\"dropdownMenuDate\">\n                               Caja\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => openModal({modal: modals.openCash, value: true})}>Abrir</Dropdown.Item>\n                                <Dropdown.Item onClick={() => openModal({modal: modals.closeCash, value: true})}>Cerrar</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SaleBreadcrum;", "export const modals = {\n    findProduct: \"findProduct\",\n    findCustomer: \"findCustomer\",\n    closeCash: \"closeCash\",\n    openCash: \"openCash\",\n    paidSale: \"paidSale\"\n};", "import * as React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { modals } from \"../constants\";\nimport { closeCashRegiser, findProduct } from \"../request\";\nimport { totalCurrency } from \"../../../utils/functions\";\n\nconst CloseCashRegister = ({ onPaid, show, onClose, montoInicial }) => {\n    const [total, setTotal] = React.useState(0);\n\n    const formik = useFormik({\n        initialValues: {\n            \"1000\": 0,\n            \"500\": 0,\n            \"200\": 0,\n            \"100\": 0,\n            \"50\": 0,\n            \"20\": 0,\n            \"monedas\": 0,\n        },\n        onSubmit: async () => {\n            await onPaid(total);\n            handleClose();\n        },\n    });\n\n    React.useEffect(() => {\n        const moneyKeys = Object.keys(formik.values);\n        const values = moneyKeys.map((key) => ( key === \"monedas\" ? new Number(formik.values[key]): new Number(key) * new Number(formik.values[key])));\n        const total = values.reduce((sum, money) => sum += money ,0);\n        setTotal(total);\n    }, [formik.values]);\n\n    const handleClose = () => {\n        onClose(modals.closeCash);\n        formik.resetForm();\n    }\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Cerrar Caja</h5>\n                <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={formik.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h4>Fondo:</h4>\n                        </div>\n                        <div className=\"col\">\n                            <h5 id=\"fondoCaja\">{totalCurrency(montoInicial)}</h5>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">$1000</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"1000\"]} min=\"0\" className=\"form-control input-cierre\" name=\"1000\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">$500</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"500\"]} min=\"0\" className=\"form-control input-cierre\" name=\"500\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">$200</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"200\"]} min=\"0\" className=\"form-control input-cierre\" name=\"200\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">$100</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"100\"]} min=\"0\" className=\"form-control input-cierre\" name=\"100\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">$50</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"50\"]} min=\"0\" className=\"form-control input-cierre\" name=\"50\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">$20</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"20\"]} min=\"0\" className=\"form-control input-cierre\" name=\"20\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"\" className=\"col\">Monedas</label>\n                        <div className=\"col\">\n                            <input type=\"number\" onChange={formik.handleChange} value={formik.values[\"monedas\"]} min=\"0\" className=\"form-control input-cierre\" name=\"monedas\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h4>Total:</h4>\n                        </div>\n                        <div className=\"col\">\n                            <h5 id=\"totalCierre\">{totalCurrency(total)}</h5>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\" type=\"submit\">Pagar</button>\n                    </div>\n                </form>\n            </Modal.Body>\n        </Modal>\n    )\n};\n\nexport default CloseCashRegister;", "import { CLIENTE_VENTA_KEY, PRODUCTOS_VENTA_KEY } from \"../../utils/constants\";\nimport { get, post} from \"../../utils/http\";\n\nconst closeSale = async ({total, cambio, paid, customer, products}) => {\n    const { data } = await post(\"/controller/ventas/crear.php\", {total, cambio, paid, customer, products});\n    return data;\n}\n\nconst cancelSale = async () => {\n    removeItemLocalStorage(CLIENTE_VENTA_KEY);\n    removeItemLocalStorage(PRODUCTOS_VENTA_KEY);\n}\n\nconst findCustomer = async (name) => {\n    const {data} = await get(\"/controller/clientes/filtro.php?filter=\"+name);\n    return data;\n}\n\nconst findProduct = async (name) => {\n    const { data } = await get(\"/controller/productos/filtro.php?filter=\"+name);\n    return data;\n}\n\nconst openCashRegisert = async (monto) => {\n    const { data } = await post(\"/controller/caja/abrir.php\", { monto});\n    return data;\n}\n\nconst closeCashRegiser = async (id, monto) => {\n    const { data } = await post(\"/controller/caja/cerrar.php\", {id, monto});\n    return data;\n}\n\nconst anyProductInStock = async (product) => {\n    let { data } =  await get('/controller/stock/validar?idProducto=' + product.idProducto);\n    return data.data;\n}\n\nexport {\n    findProduct, \n    findCustomer,\n    anyProductInStock,\n    openCashRegisert,\n    closeCashRegiser,\n    closeSale\n};\n", "import * as React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { modals } from \"../constants\";\nimport { findCustomer } from \"../request\";\n\nconst FindCustomerModal = ({ selectedCustomer, show, onClose }) => {\n    const [customers, setCustomers] = React.useState([]);\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n        },\n        onSubmit: async ({ name }) => {\n            const { data } = await findCustomer(name);\n            setCustomers(data);\n        }\n    });\n\n    const handleClose = () => {\n        setCustomers([]);\n        onClose(modals.findCustomer);\n        formik.resetForm();\n    }\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Agregar Cliente a Venta</h5>\n                <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={formik.handleSubmit}>\n                    <div className=\"form-group row\">\n                        <div className=\"col-9\">\n                            <input className=\"form-control\"\n                                placeholder=\"Buscar...\"\n                                name=\"name\"\n                                value={formik.values.name}\n                                onChange={formik.handleChange} />\n                        </div>\n                        <div className=\"col-3\">\n                            <button className=\"btn btn-primary\" type=\"submit\">Buscar</button>\n                        </div>\n                    </div>\n                </form>\n\n                <div>\n                    <table style={{ width: \"100%\" }} >\n                        <thead>\n                            <tr>\n                                <th>Cliente</th>\n                                <th>Acci\u00F3n</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                customers.map((customer, id) => (\n                                    <tr key={id}>\n                                        <td>{customer.nombre}</td>\n                                        <td>\n                                            <button\n                                                className=\"btn btn-sm btn-success\"\n                                                onClick={() => {\n                                                    selectedCustomer(customer);\n                                                    handleClose();\n                                                }}>\n                                                Agregar\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </Modal.Body>\n        </Modal>\n    )\n};\n\nexport default FindCustomerModal;", "import * as React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { modals } from \"../constants\";\nimport { findProduct } from \"../request\";\n\nconst FindProductModal = ({ selectedProduct, show, onClose }) => {\n    const [products, setProducts] = React.useState([]);\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n        },\n        onSubmit: async ({ name }) => {\n            const { data } = await findProduct(name);\n            setProducts(data);\n        }\n    });\n\n    const handleClose = () => {\n        setProducts([]);\n        onClose(modals.findProduct);\n        formik.resetForm();\n    }\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Agregar Producto a Venta</h5>\n                <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={formik.handleSubmit}>\n                    <div className=\"form-group row\">\n                        <div className=\"col-9\">\n                            <input className=\"form-control\"\n                                placeholder=\"Buscar...\"\n                                name=\"name\"\n                                value={formik.values.name}\n                                onChange={formik.handleChange} />\n                        </div>\n                        <div className=\"col-3\">\n                            <button className=\"btn btn-primary\" type=\"submit\">Buscar</button>\n                        </div>\n                    </div>\n                </form>\n\n                <div>\n                    <table style={{ width: \"100%\" }} >\n                        <thead>\n                            <tr>\n                                <th>Producto</th>\n                                <th>Acci\u00F3n</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                products.map((product, id) => (\n                                    <tr key={id}>\n                                        <td>{product.nombre}</td>\n                                        <td>\n                                            <button\n                                                className=\"btn btn-sm btn-success\"\n                                                onClick={() => selectedProduct(product)}>\n                                                Agregar\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </Modal.Body>\n        </Modal>\n    )\n};\n\nexport default FindProductModal;", "import * as React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { modals } from \"../constants\";\nimport { openCashRegisert } from \"../request\";\n\nconst OpenCashRegister = ({ onPaid, show, onClose }) => {\n    const formik = useFormik({\n        initialValues: {\n            paid: \"\",\n        },\n        onSubmit: async ({ paid }) => {\n            const { data } = await openCashRegisert(paid);\n            onPaid(data);\n            handleClose();\n        },\n    });\n\n    const handleClose = () => {\n        onClose(modals.openCash);\n        formik.resetForm();\n    }\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Abrir Caja</h5>\n                <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={formik.handleSubmit}>\n\n                    <div className=\"form-group\">\n                        <h4>Recibe:</h4>\n\n                        <input className=\"form-control\"\n                            name=\"paid\"\n                            type=\"number\"\n                            required\n                            value={formik.values.paid}\n                            onChange={(e) => {\n                                formik.handleChange(e);\n                            }} />\n\n\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\" disabled={formik.values.paid == 0} type=\"submit\">Abrir</button>\n                    </div>\n                </form>\n            </Modal.Body>\n        </Modal>\n    )\n};\n\nexport default OpenCashRegister;", "import * as React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { modals } from \"../constants\";\nimport { totalCurrency } from \"../../../utils/functions\";\n\nconst PaidSale = ({ onPaid, show, onClose, total }) => {\n    const [cambio, setCambio] = React.useState(0);\n\n    const formik = useFormik({\n        initialValues: {\n            paid: \"\",\n        },\n        onSubmit: async ({ paid }) => {\n            await onPaid({total, cambio, paid});\n            handleClose();\n        },\n    });\n\n    const handleClose = () => {\n        setCambio(0);\n        onClose(modals.paidSale);\n        formik.resetForm();\n    }\n\n    React.useEffect(() => {\n        setCambio(formik.values.paid - total);\n    }, [formik.values.paid]);\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header>\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Pagar Venta</h5>\n                <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={formik.handleSubmit}>\n                    <div className=\"form-group\">\n                        <h4>Total Venta:</h4>\n                        <span >{totalCurrency(total)}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <h4>Recibe:</h4>\n\n                        <input className=\"form-control\"\n                            name=\"paid\"\n                            type=\"number\"\n                            required\n                            value={formik.values.paid}\n                            onChange={formik.handleChange} />\n                        <div className=\"form-group\">\n                            <h4>Cambio Venta:</h4>\n                            <span >{totalCurrency(cambio)}</span>\n                        </div>\n                        <div className=\"col-3\">\n                            <button className=\"btn btn-primary\" disabled={cambio < 0 || formik.values.paid == 0} type=\"submit\">Pagar</button>\n                        </div>\n                    </div>\n                </form>\n            </Modal.Body>\n        </Modal>\n    )\n};\n\nexport default PaidSale;", "import * as React from \"react\";\nimport { totalCurrency } from \"../../utils/functions\";\n\nconst SaleDetail = ({ customer, total, onCancelSale, onCloseSale }) => {\n    return (\n        <>\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <dl>\n                                    <dt>Cliente</dt>\n                                    <dd id=\"infoCliente\">{customer?.nombre || \"---\"}</dd>\n\n                                    <dt>Total</dt>\n                                    <dd id=\"totalVentaDetalle\">{totalCurrency(total)}</dd>\n                                </dl>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button id=\"cancelarVenta\" className=\"btn btn-danger mr-1\" onClick={onCancelSale}>Cancelar</button>\n\n                                <button className=\"btn btn-success\" disabled={customer === null} onClick={onCloseSale}>Finalizar</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SaleDetail;", "import * as React from \"react\";\nimport { getCusotmerPrice, totalCurrency } from \"../../utils/functions\";\n\nconst ProductsSalesTable = ({ products, total, onUpdateQuantity, onDeleteProduct }) => {\n    return (\n        <>\n            <table className=\"table table-bordered\" >\n                <thead>\n                    <tr>\n                        <td>Producto</td>\n                        <td>Precio</td>\n                        <td>Cantidad</td>\n                        <td>Total</td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody >\n                    {\n                        products.map((product, id) => (\n                            <tr key={id}>\n                                <td>{product.nombre}</td>\n                                <td>{totalCurrency(product.precio)}</td>\n                                <td>\n                                    <input type={\"number\"} min={1} value={product.cantidad} onChange={(e) => onUpdateQuantity(product, e.target.value)}/>\n                                </td>\n                                <td>{totalCurrency(product.cantidad * product.precio)}</td>\n                                <td>\n                                    <button className=\"btn btn-sm btn-danger\" onClick={() => onDeleteProduct(product)}>\n                                        Borrar\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n                <tfoot>\n                    <tr className=\"tx-blod\">\n                        <td colSpan=\"2\"></td>\n                        <td>TOTAL</td>\n                        <td id=\"totalVentaTabla\">{totalCurrency(total)}</td>\n                    </tr>\n                </tfoot>\n            </table>\n        </>\n    );\n}\n\nexport default ProductsSalesTable;"],
  "mappings": "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",
  "names": []
}
